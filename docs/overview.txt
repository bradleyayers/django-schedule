================
A Quick Overview
================

What is an Event?
-----------------

An event doesn't have any date or time associated with it, it's just a rule for
how it recurs. In a way it designates a set of occurrences. A weekly staff
meeting is a perfect example. A weekly staff meeting is an event, it says what
it is and how often it recurs. Now if we were to say Tuesday's staff meeting,
thats an occurrence. That is a specific element in the set of occurrences
designated by the event.

There is an exception, and that is the "one-time" event. If your boss calls and
sets up an meeting today at 3. Thats a one-time event. Its only going to happen
this one time. That doesn't mean its an occurrence. It just means that its an
event which represents a set of occurrences that only has one occurrence in it.

What is an Occurrence?
----------------------

An occurrence is an execution of an event. If we have an event that describes
weekly staff meetings that happen every Tuesday, "next Tuesday's meeting" is an
*occurrence* of the event.

What does persisted Occurrences mean?
-------------------------------------

Occurrences are generated programatically. This is because we can not store all
of the occurrences in the database, because there could be infinite
occurrences. But we still want to be able to persist data about occurrences.
Like, canceling an occurrence, moving an occurrence, storing a list of
attendees with the occurrence. This is done lazily. An occurrence is generated
programatically until it needs to be saved to the database. When you use any
function to get an occurrence, it will be completely transparent whether it was
generated programatically or whether it is persisted (except that persisted
ones will have a ``pk``). Just treat them like they are persisted and you
shouldn't run into any trouble.

What is a Rule?
---------------

A rule defines how an event will recur. As of right now, there are no rules
included with the app, so you will have to create your own (don't worry, it's
simple).

Accessing Occurrences with an Event
-----------------------------------

Because some Event can recur indefinitely, you can not have a function like,
``event.get_all_occurrences()``, because that would be an infinite list. So,
there are two ways of getting occurrences given an event.

``get_occurrences(start, end)``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This gives you a list of all occurrences that occur inclusively after start and
exclusively before end. It's important to clarify it is determined whether or
not an occurance occurs within a time range (remember that occurrences as not
necessarily single points in time, they may have a duration).

Any occurrence that overlaps with the time range is considered within that
range. For example, if an occurrence ends 10 seconds after ``start`` it
considered within the time range. An occurrence that starts 10 seconds before
``end`` .

``occurrences_after(after)``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This method produces a generator that generates events inclusively after the
given datetime ``after``. If no date is given then it uses now.


Accessing Occurrences from lists of Events
------------------------------------------

You are often going to have a list of events and want to get occurrences from
them. To do this you can use Periods, and EventListManagers.
